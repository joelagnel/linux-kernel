# SPDX-License-Identifier: GPL-2.0-only or BSD-2-Clause
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/msm/dsi-controller-sc7180.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Description of Qualcomm Display DSI controller dt properties.

maintainers:
  - Krishna Manikandan <mkrishn@codeaurora.org>

description: |
  Device tree bindings for DSI controller for SC7180 target.

allOf:
  - $ref: dsi-common-controller.yaml#

properties:
  compatible:
    const: qcom,mdss-dsi-ctrl

  reg:
    maxItems: 1

  reg-names:
    const: dsi_ctrl

  interrupts:
    maxItems: 1

  clocks:
    maxItems: 6

  clock-names:
    items:
         - const: byte
         - const: byte_intf
         - const: pixel
         - const: core
         - const: iface
         - const: bus

  phys:
    maxItems: 1

  phy-names:
    const: dsi

  ports: true

required:
  - compatible
  - reg
  - reg-names
  - interrupts
  - clocks
  - clock-names
  - phys
  - phy-names
  - ports

unevaluatedProperties: false

examples:
  - |
     #include <dt-bindings/interrupt-controller/arm-gic.h>
     #include <dt-bindings/clock/qcom,dispcc-sc7180.h>
     #include <dt-bindings/clock/qcom,gcc-sc7180.h>

     mdss: mdss {
       #address-cells = <2>;
       #size-cells = <2>;
       interrupt-controller;
       #interrupt-cells = <1>;

       dsi0: dsi@ae94000 {
           compatible = "qcom,mdss-dsi-ctrl";
           reg = <0 0x0ae94000 0 0x400>;
           reg-names = "dsi_ctrl";

           interrupt-parent = <&mdss>;
           interrupts = <4 IRQ_TYPE_LEVEL_HIGH>;

           clocks = <&dispcc DISP_CC_MDSS_BYTE0_CLK>,
                    <&dispcc DISP_CC_MDSS_BYTE0_INTF_CLK>,
                    <&dispcc DISP_CC_MDSS_PCLK0_CLK>,
                    <&dispcc DISP_CC_MDSS_ESC0_CLK>,
                    <&dispcc DISP_CC_MDSS_AHB_CLK>,
                    <&gcc GCC_DISP_HF_AXI_CLK>;

           clock-names = "byte",
                         "byte_intf",
                         "pixel",
                         "core",
                         "iface",
                         "bus";

           phys = <&dsi_phy>;
           phy-names = "dsi";

           ports {
                 #address-cells = <1>;
                 #size-cells = <0>;
                 port@0 {
                         reg = <0>;
                         dsi0_in: endpoint {
                                  remote-endpoint = <&dpu_intf1_out>;
                         };
                };

                port@1 {
                        reg = <1>;
                        dsi0_out: endpoint {
                        };
               };
          };
       };
     };
...

